<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-03-08T06:08:26.001Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网络安全</title>
    <link href="http://example.com/2021/03/08/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    <id>http://example.com/2021/03/08/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/</id>
    <published>2021-03-08T03:36:07.000Z</published>
    <updated>2021-03-08T06:08:26.001Z</updated>
    
    <content type="html"><![CDATA[<p>网络通信中面临的4种安全威胁 </p><ul><li><code>截取</code>：窃听通信内容 </li><li><code>中断</code>：中断网络通信 </li><li><code>篡改</code>：篡改通信内容 </li><li><code>伪造</code>：伪造通信内容<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ee47563f23034943b7beabce49a45ac7~tplv-k3u1fbpfcp-watermark.image"> <h4><span id="wang-luo-ceng-arp-qi-pian">网络层 - ARP欺骗</span><a href="#wang-luo-ceng-arp-qi-pian" class="header-anchor">#</a></h4></li><li><code>ARP欺骗</code>(ARP spoofing)，又称<code>ARP毒化</code>(ARP poisoning)、<code>ARP病毒</code>、<code>ARP攻击</code> </li><li><code>ARP欺骗</code>可以造成的效果 <ul><li>可让攻击者获取局域网上的数据包甚至可篡改数据包</li><li>可让网络上特定电脑之间无法正常通信 (例如<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%89%A7%E6%B3%95%E5%AE%98/4891462">网络执法官</a>这样的软件) </li><li>让送至特定<code>IP</code>地址的流量被错误送到攻击者所取代的地方 </li><li>等等 </li></ul></li></ul><h5><span id="he-xin-bu-zou-ju-li">核心步骤举例</span><a href="#he-xin-bu-zou-ju-li" class="header-anchor">#</a></h5><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9d4ad1a6adb54dd890b19ad65de26de7~tplv-k3u1fbpfcp-watermark.image"> </p><h5><span id="fang-hu">防护</span><a href="#fang-hu" class="header-anchor">#</a></h5><ul><li>静态<code>ARP</code> </li><li><code>DHCP Snooping</code>:网络设备可以借由<code>DHCP</code>保留网络上各电脑的<code>MAC</code>地址，在伪造的<code>ARP</code>数据包发出时即可侦测到 </li><li>利用一些软件监听<code>ARP</code>的不正常变动 </li></ul><h4><span id="dos-ddos">Dos、DDoS</span><a href="#dos-ddos" class="header-anchor">#</a></h4><ul><li><code>DoS攻击</code>(拒绝服务攻击，Denial-Of-Service attack): 使目标电脑的网络或系统资源耗尽，使服务暂时中断或停止，导致其正常用户无法访问 </li><li><code>DDoS攻击</code>(分布式拒绝服务攻击，Distribution Denial-Of-Service attack)：黑客使用网络上两个或以上被攻陷的电脑作为“僵尸(肉鸡)”，向特定的目标发动<code>DoS</code>攻击 &gt; 2018年3月，GitHub遭到迄今为止规模最大的DDoS攻击</li><li><code>DoS</code> 攻击可以分为2大类 <ul><li>带宽消耗型：<code>UDP</code>洪水攻击、<code>ICMP</code>洪水攻击 </li><li>资源消耗型：<code>SYN</code>洪水攻击、<code>LAND</code>攻击 </li></ul></li></ul><h5><span id="fang-yu">防御</span><a href="#fang-yu" class="header-anchor">#</a></h5><ul><li><p><code>防御方式</code>通常为：入侵检测、流量过滤和多重验证，堵塞网络带宽的流量将被过滤，而正常的流量可正常通过 </p></li><li><p><code>防火墙</code> </p><ul><li>防火墙可以设置规则，例如允许或拒绝特定通讯协议，端口或IP地址 </li><li>当攻击从少数不正常的IP地址发出时，可以简单的使用拒绝规则阻止一切从攻击源IP发出的通信 </li><li>复杂攻击难以用简单规则来阻止，例如80端口遭受攻击时，不可能拒绝端口所有的通信，因为同时会阻止合法流量 </li><li>防火墙可能处于网络框架中过后的位置，路由器可能再恶意流量到达防火墙前即被攻击影响 </li></ul></li><li><p><code>交换机</code>：大多数交换机有一定的速度限制和访问控制能力 </p></li><li><p><code>路由器</code>：和交换机类似，路由器也有一定的速度限制和访问控制能力 </p></li><li><p><code>黑洞引导</code>:将所有受攻击计算机的通信全部发送至一个“黑洞”（空接口或不存在的计算机地址）或者有足够能力处理洪流的网络设备商，以避免网络受到较大的影响 </p></li><li><p><code>流量清洗</code>：当流量被送到DDoS防护清洗中心时，通过采用抗DDoS软件处理，将正常流量和恶意流量区分开，正常的流量则回注回客户网站 </p></li></ul><h4><span id="chuan-shu-ceng-syn-hong-shui-gong-ji">传输层 — SYN洪水攻击</span><a href="#chuan-shu-ceng-syn-hong-shui-gong-ji" class="header-anchor">#</a></h4><ul><li>SYN洪水攻击(SYN flooding attack) 攻击者发送一系列SYN请求到目标，然后让目标因收不到ACK（第三次握手）而进行等待、消耗资源 </li><li>攻击方法 <ul><li>跳过发送最后的ACK信息 </li><li>修改源IP地址，让目标送SYN-ACK到伪造的IP地址，因此目标永不可能收到ACK（第三次握手） </li></ul></li><li>防护，参考<a href="https://tools.ietf.org/html/rfc4987">RFC 4987</a> </li></ul><h4><span id="chuan-shu-ceng-land-gong-ji">传输层 — LAND攻击</span><a href="#chuan-shu-ceng-land-gong-ji" class="header-anchor">#</a></h4><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9284c4d3d26d451e9d0a791adb7acfa9~tplv-k3u1fbpfcp-watermark.image"> </p><h4><span id="ying-yong-ceng-dns-jie-chi">应用层 - DNS劫持</span><a href="#ying-yong-ceng-dns-jie-chi" class="header-anchor">#</a></h4><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1f5d990aefe544d38481e035074a5c5e~tplv-k3u1fbpfcp-watermark.image"></p><h4><span id="http-xie-yi-de-an-quan-wen-ti">HTTP协议的安全问题</span><a href="#http-xie-yi-de-an-quan-wen-ti" class="header-anchor">#</a></h4><p><code>HTTP协议</code>默认是采取明文传输的，因此会有很大的安全隐患，常见的提高安全性的方法是：对通信内容进行<code>加密</code>后，再进行传输 </p><h5><span id="chang-jian-de-jia-mi-fang-shi">常见的加密方式</span><a href="#chang-jian-de-jia-mi-fang-shi" class="header-anchor">#</a></h5><p><strong>不可逆</strong> </p><blockquote><ul><li>单向散列函数： MD5、SHA等 </li></ul></blockquote><p><strong>可逆</strong> </p><blockquote><ul><li>对称加密：DES、3DES、AES等 </li><li>非对称加密：RSA 等 </li></ul></blockquote><p><strong>其他</strong> </p><blockquote><ul><li>混合密码系统 </li><li>数字签名 </li><li>证书 </li></ul></blockquote><p><strong>常见英文</strong> </p><p><code>encrypt</code>(加密) <code>decrypt</code>(解密) <code>plaintext</code>(明文) <code>ciphertext</code>(密文) </p><p><strong>人物设计</strong> </p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/44dd04a696ba4a95a7354d5aa09cd1e3~tplv-k3u1fbpfcp-watermark.image"> </p><p><strong>如何防止被窃听？</strong> </p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d7e0a479be3546fb86481cb5a3a6218b~tplv-k3u1fbpfcp-watermark.image"> </p><h4><span id="dan-xiang-san-lie-han-shu">单向散列函数</span><a href="#dan-xiang-san-lie-han-shu" class="header-anchor">#</a></h4><p>几个散列函数网站：<a href="https://www.cmd5.com/hash.aspx">MD5加密</a>、<a href="https://www.cmd5.com/">MD5解密</a>、<a href="https://www.sojson.com/encrypt_des.html">其他加密</a>、<a href="https://tool.chinaz.com/tools/md5.aspx">其他</a> </p><p><code>单向散列函数（One-way hash function）</code>：可以根据消息内容计算出散列值 散列值的长度和消息的长度无关，无论消息是<code>1bit</code>、<code>10M</code>、<code>100G</code>，单向散列函数都会计算出固定长度的散列值 </p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6b0f0b38ad8241dfb636106611a42ee1~tplv-k3u1fbpfcp-watermark.image"> </p><h5><span id="san-lie-han-shu-te-dian">散列函数特点</span><a href="#san-lie-han-shu-te-dian" class="header-anchor">#</a></h5><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c798115063224f2aa2d2a41712136120~tplv-k3u1fbpfcp-watermark.image"> </p><h5><span id="san-lie-han-shu-cheng-hu">散列函数称呼</span><a href="#san-lie-han-shu-cheng-hu" class="header-anchor">#</a></h5><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/316ef52a511f495a8c6a1d4c103b5ad5~tplv-k3u1fbpfcp-watermark.image"> </p><h5><span id="chang-jian-de-ji-chong-dan-xiang-san-lie-han-shu">常见的几种单向散列函数</span><a href="#chang-jian-de-ji-chong-dan-xiang-san-lie-han-shu" class="header-anchor">#</a></h5><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1f4c97731c8b4e4f8462f679e8eab039~tplv-k3u1fbpfcp-watermark.image"> </p><h5><span id="ru-he-fang-zhi-shu-ju-bei-cuan-gai-dui-bi-liang-tian-de-wen-jian-xian-ran-bu-xian-shi-gen-ju-wen-jian-ji-suan-chu-san-lie-zhi-kan-liang-tian-de-dui-bi-shi-fou-yi-zhi">如何防止数据被篡改 对比两天的文件，显然不现实，根据文件计算出散列值，看两天的对比是否一致</span><a href="#ru-he-fang-zhi-shu-ju-bei-cuan-gai-dui-bi-liang-tian-de-wen-jian-xian-ran-bu-xian-shi-gen-ju-wen-jian-ji-suan-chu-san-lie-zhi-kan-liang-tian-de-dui-bi-shi-fou-yi-zhi" class="header-anchor">#</a></h5><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/04372da8657d4c5d8598de11c6c12637~tplv-k3u1fbpfcp-watermark.image"> </p><h5><span id="ying-yong-wang-zhan-realvnc-ti-gong-yi-ge-san-lie-zhi-sha-256-xia-zai-wan-cheng-hou-wen-jian-jin-xing-san-lie-dui-bi-ru-guo-yi-zhi-zheng-ming-zai-jing-xiang-xia-zai-de-wen-jian-mei-you-wen-ti">应用 网站提供一个散列值（<code>SHA-256</code>），下载完成后文件进行散列对比，如果一直，证明在镜像下载的文件没有问题</span><a href="#ying-yong-wang-zhan-realvnc-ti-gong-yi-ge-san-lie-zhi-sha-256-xia-zai-wan-cheng-hou-wen-jian-jin-xing-san-lie-dui-bi-ru-guo-yi-zhi-zheng-ming-zai-jing-xiang-xia-zai-de-wen-jian-mei-you-wen-ti" class="header-anchor">#</a></h5><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/202c92282e0b47968bf7dea364239e15~tplv-k3u1fbpfcp-watermark.image"> </p><p>进行数据库的账户密码存储，用户注册时候，数据层存储的密码应该是进行加密后的密码 </p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eb2df6f2194d43e2a63bf54136b3a8a1~tplv-k3u1fbpfcp-watermark.image"> </p><h4><span id="ru-he-jia-mi-jie-mi">如何加密解密？</span><a href="#ru-he-jia-mi-jie-mi" class="header-anchor">#</a></h4><p>对称加密/非对称加密 主要就是<code>密钥</code>、<code>算法</code>，接下来我们也重点关注这两项 </p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3021349f06a046dcb8447f4ee4b23a83~tplv-k3u1fbpfcp-watermark.image"> </p><h4><span id="dui-cheng-jia-mi-you-cheng-dui-cheng-mi-ma">对称加密（又称对称密码）</span><a href="#dui-cheng-jia-mi-you-cheng-dui-cheng-mi-ma" class="header-anchor">#</a></h4><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e39cd8fbd48841fd9c7c030800f33338~tplv-k3u1fbpfcp-watermark.image"> </p><p>在对称加密中，加密、解密时使用的是<code>同一个密钥</code> 常见的对称加密算法有 <code>DES</code>、<code>3DES</code>、 <code>AES</code> </p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/35ab790378314da19921f13a53210730~tplv-k3u1fbpfcp-watermark.image"> </p><h5><span id="des-data-encryption-standard">DES (Data Encryption Standard)</span><a href="#des-data-encryption-standard" class="header-anchor">#</a></h5><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8958d9ea1ad949b689ad0ff23f660229~tplv-k3u1fbpfcp-watermark.image"> </p><h5><span id="3des-triple-data-encryption-algorithm">3DES(Triple Data Encryption Algorithm)</span><a href="#3des-triple-data-encryption-algorithm" class="header-anchor">#</a></h5><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/387ef92ad0584bc0912b737ded06f957~tplv-k3u1fbpfcp-watermark.image"> </p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2e826b3156f84d99bec5dd2109aceb50~tplv-k3u1fbpfcp-watermark.image"> </p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8f38b2ddd14f4c06a0b529d3e18a80d6~tplv-k3u1fbpfcp-watermark.image"> </p><h5><span id="aes-advanced-encryption-standard">AES (Advanced Encryption Standard)</span><a href="#aes-advanced-encryption-standard" class="header-anchor">#</a></h5><ul><li>取代<code>DES</code>成为新标准的一种对称加密算法，又称<code>Rijndael</code>加密算法 </li><li><code>AES</code>的密钥长度有<code>128</code>、<code>192</code>、<code>256</code>bit三种 </li><li>目前<code>AES</code>，已经逐步取代<code>DES</code>、<code>3DES</code>，成为首选的对称加密算法 </li><li>一般来说，我们也不应该去使用任何自制的密码算法，而是应该使用<code>AES</code>，它经过了全世界密码学家所进行的高品质验证工作 </li></ul><h5><span id="mi-yao-pei-song-wen-ti">密钥配送问题</span><a href="#mi-yao-pei-song-wen-ti" class="header-anchor">#</a></h5><ul><li>使用对称加密时，一定会遇到密钥配送的问题 </li><li>如果Alice将使用对称加密过的消息发送给了Bob，只有将密钥发送给Bob，Bob才能完成解密，但是在发送过程中，密钥可能被Eve窃取，最后Eve也能完成解密 </li></ul><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0940b8545a9a47b5881e0f64020f4ab6~tplv-k3u1fbpfcp-watermark.image"> </p><p><strong>如何解决密钥配送问题？</strong> </p><ul><li>事先共享密钥 （比如私下共享） </li><li>密钥分配中心 (key Distribution Center, 简称KDC) </li><li>Diffie-Hellman密钥交换 </li><li>使用<code>非对称加密</code>配送 </li></ul><h4><span id="fei-dui-cheng-jia-mi-asymmetric-cryptography">非对称加密 (Asymmetric Cryptography)</span><a href="#fei-dui-cheng-jia-mi-asymmetric-cryptography" class="header-anchor">#</a></h4><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cda83cc99677434eba1e58d0fe520e55~tplv-k3u1fbpfcp-watermark.image"></p><ul><li>在<strong>非对称加密</strong>中，密钥分为<code>加密密钥</code>、<code>解密密钥</code>2种，它们并不是同一个密钥 </li><li><strong>加密密钥</strong>：一般是公开的，因此该密钥成为<code>公钥</code>(<code>public key</code>),因此<strong>非对称加密</strong>也被成为<code>公钥秘密</code>(<code>Public-key Cryptography</code>) </li><li><strong>解密密钥</strong>：由消息接收者自己保管的，不能公开，因此也称为<code>私钥(Private Key)</code><br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/73823d15635642e4b1d6d03631e47bd8~tplv-k3u1fbpfcp-watermark.image"></li></ul><h5><span id="gong-yao-si-yao">公钥、私钥</span><a href="#gong-yao-si-yao" class="header-anchor">#</a></h5><ul><li>公钥和私钥是一一对应的，不能单独生成，一对公钥和私钥统称为<code>密钥对(key pair)</code> </li><li>由<code>公钥</code>加密的密文，必须使用与该<code>公钥</code>相应的<code>私钥</code>才能解密 </li><li>由<code>私钥</code>加密的密文，必须使用与该<code>私钥</code>相应的<code>公钥</code>才能解密（用于签名认证） </li></ul><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9288d64e6b654db3b17daf560ea7bb1d~tplv-k3u1fbpfcp-watermark.image"> </p><h5><span id="jie-jue-mi-yao-pei-song-wen-ti">解决密钥配送问题</span><a href="#jie-jue-mi-yao-pei-song-wen-ti" class="header-anchor">#</a></h5><ul><li><p>由消息的<code>接收者</code>，生成一对公钥、私钥 </p></li><li><p>将公钥发给消息的发送者 * 消息的发送者使用公钥加密消息，消息的接收者使用私钥解密消息 </p></li><li><p><strong>非对称加密</strong>的加密速度<strong>比对称加密</strong>要慢 </p></li></ul><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4044b2cee8ea45d586f4d4199ea5c4c7~tplv-k3u1fbpfcp-watermark.image"> </p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/32751acad35047ecb55bfe1a7f349c68~tplv-k3u1fbpfcp-watermark.image"> </p><h5><span id="rsa">RSA</span><a href="#rsa" class="header-anchor">#</a></h5><ul><li>目前使用最广泛的<strong>非对称加密</strong>算法是RSA </li><li>RSA的名字是由它的三位开发者的姓氏首字母组成 </li></ul><h4><span id="hun-he-mi-ma-xi-tong-hybrid-cryptosystem">混合密码系统 (Hybrid Cryptosystem)</span><a href="#hun-he-mi-ma-xi-tong-hybrid-cryptosystem" class="header-anchor">#</a></h4><ul><li><strong>对称加密</strong>的缺点：不能很好的解决密钥配送问题(密钥会被窃听) </li><li><strong>非对称加密</strong>的缺点：加密解密速度比较慢 </li><li><strong>混合密码系统</strong>：是将对称加密和非对称加密的优势相结合的方法 <blockquote><p>解决了非对称加密速度慢的问题 </p><p>并通过非对称加密解决了对称加密的密钥配送问题 </p></blockquote></li><li>网络上的密码通信所用的<code>SSL/TLS</code> 都运用了混合密码系统 </li></ul><h5><span id="jia-mi">加密</span><a href="#jia-mi" class="header-anchor">#</a></h5><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bd726f9190664087b5b88f72e510563a~tplv-k3u1fbpfcp-watermark.image"><br><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/869a194a83494bda8970fcfa9f4b84b4~tplv-k3u1fbpfcp-watermark.image"></p><h5><span id="jie-mi">解密</span><a href="#jie-mi" class="header-anchor">#</a></h5><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c02df9d47d27467391b7a95f2c5e62d6~tplv-k3u1fbpfcp-watermark.image"><br><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cd3c11bc9ab2457b8022bb96eae6ecc1~tplv-k3u1fbpfcp-watermark.image"> </p><p><strong>加密解密流程</strong> </p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9c2dc62987424a4481d846d89bdc6c34~tplv-k3u1fbpfcp-watermark.image"> </p><h4><span id="shu-zi-qian-ming">数字签名</span><a href="#shu-zi-qian-ming" class="header-anchor">#</a></h4><p><strong>想象以下场景</strong> </p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/055dfb9a552544989ca589fc9bc2f3a4~tplv-k3u1fbpfcp-watermark.image"><br><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/831b01d6b09645098602bb948c65ddb3~tplv-k3u1fbpfcp-watermark.image"> </p><p><strong>过程</strong> </p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cc3e4c233f87444e96f07589206d02d0~tplv-k3u1fbpfcp-watermark.image"> </p><p>由于加密整条消息，信息量大而且非对称机密速度慢，因此进行了改进，求出消息的散列值(<code>具有唯一性</code>)进行加密 </p><p><strong>改进过程</strong> </p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fdcf3205786f4dc4be7844c2be3bb126~tplv-k3u1fbpfcp-watermark.image"> </p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1273f7513e1a4223947ad76586936bc9~tplv-k3u1fbpfcp-watermark.image"> </p><p><strong>疑惑</strong> </p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/88d59a504f444f539c7f3f274973e54b~tplv-k3u1fbpfcp-watermark.image"> </p><p><strong>公钥、私钥总结</strong> </p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/338122cd7eec44778338d6800c50395f~tplv-k3u1fbpfcp-watermark.image"> </p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dc625a48c4124c8a9de630e24074e946~tplv-k3u1fbpfcp-watermark.image"> </p><h4><span id="zheng-shu">证书</span><a href="#zheng-shu" class="header-anchor">#</a></h4><p>如果遭遇了中间人攻击，那么，<code>公钥将可能是伪造的</code>，如何验证公钥的合法性？ <strong>证书</strong></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4386431ec06348c1ad08f272964a847f~tplv-k3u1fbpfcp-watermark.image"> </p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/674c2399125146729677e6ed84567228~tplv-k3u1fbpfcp-watermark.image"> </p><h5><span id="zheng-shu-shi-yong">证书使用</span><a href="#zheng-shu-shi-yong" class="header-anchor">#</a></h5><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0db39acb2176444491ac19ae7c26b509~tplv-k3u1fbpfcp-watermark.image"> </p><ul><li>各大<code>CA</code>的公钥，默认已经内置在浏览器和操作系统中，也就避免了获取证书的公钥再度被劫持 </li></ul><h5><span id="zhu-ce-he-xia-zai">注册和下载</span><a href="#zhu-ce-he-xia-zai" class="header-anchor">#</a></h5><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6eb13cfbb03346b5a83c29843668ebf0~tplv-k3u1fbpfcp-watermark.image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;网络通信中面临的4种安全威胁 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;截取&lt;/code&gt;：窃听通信内容 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;中断&lt;/code&gt;：中断网络通信 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;篡改&lt;/code&gt;：篡改通信内容 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;伪造&lt;</summary>
      
    
    
    
    
    <category term="网络" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>网络应用层</title>
    <link href="http://example.com/2021/03/08/%E7%BD%91%E7%BB%9C-%E5%BA%94%E7%94%A8%E5%B1%82/"/>
    <id>http://example.com/2021/03/08/%E7%BD%91%E7%BB%9C-%E5%BA%94%E7%94%A8%E5%B1%82/</id>
    <published>2021-03-08T03:36:07.000Z</published>
    <updated>2021-03-08T05:48:31.955Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="ji-chu-gai-nian">基础概念</span><a href="#ji-chu-gai-nian" class="header-anchor">#</a></h2><h4><span id="ying-yong-ceng-chang-jian-de-xie-yi">应用层常见的协议</span><a href="#ying-yong-ceng-chang-jian-de-xie-yi" class="header-anchor">#</a></h4><ul><li>超文本传输：<code>HTTP</code>、<code>HTTPS</code></li><li>文件传输：<code>FTP</code></li><li>电子邮件：<code>SMTP</code>、<code>POP3</code>、<code>IMAP</code></li><li>动态主机配置：<code>DHCP</code></li><li>域名系统：<code>DNS</code><h4><span id="yu-ming-domain-name">域名（Domain Name）</span><a href="#yu-ming-domain-name" class="header-anchor">#</a></h4>由于IP地址不方便记忆，并且不能表达组织的名称和性质，人们设计出了域名（比如<code>baidu.com</code>）,但实际上，为了能够访问到具体的主机，最终还是得知道目标主机的IP地址。<a href="https://wanwang.aliyun.com/">域名申请注册</a></li></ul><blockquote><p>如果干脆全程使用域名，不用IP地址会有什么问题？<br>IP地址是固定4个字节，域名随随便便都至少十几个字节，这无疑会增加路由器的负担，浪费流量</p></blockquote><p>根据级别不同，域名可以分为：</p><ul><li>顶级域名(<code>Top-level Domain</code>, 简称<code>TLD</code>)</li><li>二级域名</li><li>三级域名</li><li>…</li></ul><h5><span id="ding-ji-yu-ming">顶级域名</span><a href="#ding-ji-yu-ming" class="header-anchor">#</a></h5><p>通用顶级域名(<code>General Top-level Domain</code>,简称<code>gTLD</code>) 包括 <code>.com(公司)</code> <code>.net(网络机构)</code> <code>.org(组织机构)</code> <code>.edu(教育)</code> <code>.gov(政府部门)</code> <code>.int(国际组织)</code> 等</p><p>国家及地区顶级域名(<code>Country Code Top-level Domain</code> 简称 <code>ccTLD</code>) 包括 <code>.cn(中国)</code> <code>.jp(日本)</code> <code>.uk(英国)</code></p><p>新通用顶级域名(<code>New Generic Top-level Domain</code>, 简称<code>New gTLD</code>) 包括 <code>.vip</code> <code>.xyz</code> <code>.top</code> <code>.club</code> <code>.shop</code> 等</p><h5><span id="er-ji-yu-ming">二级域名</span><a href="#er-ji-yu-ming" class="header-anchor">#</a></h5><p>二级域名是指顶级域名之下的域名</p><ul><li>在通用顶级域名下，它一般指域名注册人的名称，例如<code>google</code>、<code>baidu</code>、<code>microsoft</code></li><li>在国家及地区的顶级域名下，它一般指注册类别的，例如<code>com</code>、<code>edu</code>、<code>gov</code>、<code>net</code>等</li></ul><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cf1ae1ae72834f6b8efb645c88ab350b~tplv-k3u1fbpfcp-watermark.image"></p><h2><span id="dns">DNS</span><a href="#dns" class="header-anchor">#</a></h2><ul><li><code>DNS</code> 的全称是：<code>Domain Name System</code>，译为：域名系统</li><li>利用<code>DNS</code>协议，可以将域名(比如<code>baidu.com</code>) 解析成对应的IP地址(比如 <code>220.181.38.148</code>)</li><li><code>DNS</code> 可以基于<code>UDP</code>协议，也可以基于<code>TCP</code>协议，服务器占用<code>53</code>端口</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1cbb128f242e4317b2f9543c5e84bf61~tplv-k3u1fbpfcp-watermark.image"></p><h4><span id="dns-fu-wu-qi">DNS 服务器</span><a href="#dns-fu-wu-qi" class="header-anchor">#</a></h4><ul><li>客户端会首先访问最近的一台<code>DNS</code>服务器(也就是客户端自己配置的DNS服务器)</li><li>所有的<code>DNS</code>服务器都记录了DNS根域名服务器（<code>域名最后隐藏的&quot;.&quot;</code>） 的<code>IP</code>地址</li><li>上级<code>DNS</code>服务器记录了下一级<code>DNS</code>服务器的<code>IP</code>地址</li><li>全球一共<code>13</code>台<code>IPv4</code>的<code>DNS</code>根域名服务器、<code>25</code>台<code>IPv6</code>的<code>DNS</code>根域名服务器</li></ul><h5><span id="chang-yong-ming-ling">常用命令</span><a href="#chang-yong-ming-ling" class="header-anchor">#</a></h5><p><code>ipconfig /displaydns</code> : 查看DNS缓存记录</p><p><code>ipconfig /flushdns</code> :清空DNS缓存记录</p><p><code>ping</code> 域名</p><p><code>nslookup</code> 域名</p><h2><span id="dhcp">DHCP</span><a href="#dhcp" class="header-anchor">#</a></h2><ul><li><code>DHCP</code>(Dynamic Host Configuration Protocol),译为：动态主机配置协议<ul><li><code>DHCP</code>协议基于<code>UDP</code>协议，客户端是<code>68</code>端口，服务器是<code>67</code>端口</li></ul></li><li><code>DHCP</code>服务器会从<code>IP</code>地址池中，挑选一个<code>IP</code>地址“出租”给客户端一段时间，时间到期就回收它们<ul><li>平时家里上网的路由器就可以充当<code>DHCP</code>服务器</li></ul></li></ul><h4><span id="fen-pei-ip-di-zhi-de-4-ge-jie-duan">分配IP地址的4个阶段</span><a href="#fen-pei-ip-di-zhi-de-4-ge-jie-duan" class="header-anchor">#</a></h4><p><code>DISCOVER</code>: 发现服务器，发广播包(源<code>IP</code>是<code>0.0.0.0</code>,目标<code>IP</code>是<code>255.255.255.255</code>,目标<code>MAC</code>是<code>FF:FF:FF:FF:FF:FF</code>)</p><p><code>OFFER</code>:提供租约，服务器返回可以租用的<code>IP</code>地址，以及租用期限、子网掩码、网关、DNS等信息，注意：这里可能会有多个服务器提供租约</p><p><code>REQUEST</code>:选择<code>IP</code>地址，客户端选择一个<code>OFFER</code>，发送广播包进行回应</p><p><code>ACKNOWLEDGE</code>：确认，被选中的服务器发送<code>ACK</code>数据包给客户端，至此<code>IP</code>地址分配完毕</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/52539d5cc0874e249ed5194f7c168662~tplv-k3u1fbpfcp-watermark.image"></p><h5><span id="xi-jie">细节</span><a href="#xi-jie" class="header-anchor">#</a></h5><p>DHCP服务器可以跨网段分配IP地址么？(DHCP服务器、客户端不在同一个网段)</p><blockquote><p>可以借助<code>DHCP</code>中继代理<code>(DHCP Relay Agent)</code>实现跨网段分配<code>IP</code>地址</p></blockquote><p>自动续约</p><blockquote><p>客户端会在租期不足的时候，自动向<code>DHCP</code>服务器发送<code>REQUEST</code>信息申请续约</p></blockquote><p>常用命令</p><p><code>ipconfig /all</code> :可以看到DHCP相关的详细信息，比如租约过期时间、DHCP服务器地址等</p><p><code>ipconfig /release</code>:释放租约</p><p><code>ipconfig /renew</code>:重新申请<code>IP</code>地址、申请续约(延长租期)</p><h2><span id="http">HTTP</span><a href="#http" class="header-anchor">#</a></h2><p><code>HTTP(Hyper Text Transfer Protocol)</code>,译为超文本传输协议，是互联网中应用最广泛的应用层协议之一。设计<code>HTTP</code>最初的目的是：提供一种发布和接收<code>HTML</code>页面的方法，由<code>URI</code>来标识具体的资源,后面用<code>HTTP</code>来传递的数据格式不仅仅是<code>HTML</code>，应用非常广泛</p><p><code>HTML（Hyper Text Markup Language）</code>：超文本(不单单可以表达文本，还可以表达超过文本的信息)标记语言,用以编写网页</p><blockquote><p><code>URI</code>包含<code>URL</code>，可能是不完整的一个路径（相对路径）,<code>URL</code>是完整路径</p></blockquote><h4><span id="ban-ben">版本</span><a href="#ban-ben" class="header-anchor">#</a></h4><ul><li><p>1991年，HTTP/0.9</p><blockquote><p>只支持<code>GET</code>请求方法获取文本数据(比如<code>HTML</code>文档)，且不支持请求头、响应头等，无法向服务器传递太多的数据</p></blockquote></li><li><p>1996年，HTTP/1.0</p><blockquote><p>支持<code>POST</code>、<code>HEAD</code>等请求方法，支持请求头、响应头等，支持更多种数据类型(不再局限于文本数据)，浏览器的每次请求都需要跟服务器建立一个<code>TCP</code>连接，请求处理完成后立即断开<code>TCP</code>连接</p></blockquote></li><li><p>1997年，HTTP/1.1 (最经典、使用最广泛的版本)</p><blockquote><p>支持<code>PUT</code>、<code>DELETE</code>等请求方法，采用持久连接(<code>Connection:Keep-alive</code>),多个请求可以共用同一个<code>TCP</code>连接 (以前的请求是请求网页<code>HTML</code>要三次握手、四次挥手，如果网页里面有图片又要三次握手、四次挥手，现在是可以一次连接，传递完毕资源后再断开连接，或者根本不断开连接，直到关闭网页再关闭连接)</p></blockquote></li><li><p>2015年，HTTP/2.0</p></li><li><p>2018年，HTTP/3.0</p></li></ul><h4><span id="biao-zhun">标准</span><a href="#biao-zhun" class="header-anchor">#</a></h4><ul><li><p><code>HTTP</code>的标准由万维网协会(<code>W3C</code>)、互联网工程任务组(<code>IETE</code>)协调制定，最终发布了一些了的<code>RFC</code></p></li><li><p><a href="https://www.rfc-editor.org/standards">RFC</a> (Request For Comments，可以译为：请求意见稿)，<code>HTTP/1.1</code> 最早是在1997年的<a href="https://tools.ietf.org/html/rfc2068">RFC_2068</a>中记录的，该规范在1999年的<a href="https://tools.ietf.org/html/rfc2626">RFC_2626</a>中已作废，2014年又由<a href="https://tools.ietf.org/html/rfc7230">RFC_7230</a>系列的<code>RFC</code>取代。</p></li><li><p><code>HTTP/2</code>标准于2015年5月以<a href="https://tools.ietf.org/html/rfc7540">RFC_7540</a>正式发表，取代<code>HTTP/1.1</code>成为<code>HTTP</code>的实现标准</p></li><li><p>中国的RFC</p></li><li><p>1996年3月，清华大学提交的适应不同国家和地区中文编码的汉字统一传输标准被IETF通过为<a href="https://tools.ietf.org/html/rfc1922">RFC_1922</a>，成为中国大陆第一个被认可为RFC文件的提交协议</p></li></ul><h4><span id="bao-wen-ge-shi">报文格式</span><a href="#bao-wen-ge-shi" class="header-anchor">#</a></h4><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/40270a146bb64b81aca5013784698768~tplv-k3u1fbpfcp-watermark.image" alt="报文格式"><br><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/614c79c4f39e48139d949d9133264cc2~tplv-k3u1fbpfcp-watermark.image" alt="报文格式1"></p><p> <img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/69238669ad384952b5521d1367ee33b4~tplv-k3u1fbpfcp-watermark.image"><br> <img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4d0bf6b2bf6f4f3eba64de82690363d5~tplv-k3u1fbpfcp-watermark.image"></p><p>注意每个换行部分有一个<code>回车和换行符</code>,请求头和请求体之间也有<code>回车和换行符</code></p><h5><span id="abnf">ABNF</span><a href="#abnf" class="header-anchor">#</a></h5><p><code>ABNF</code>是<code>BNF</code>(Backs-Naur Form,译为：巴科斯-瑙尔范式)的修改、增强版</p><p>在<a href="https://tools.ietf.org/html/rfc5234">RFC_5234</a>中表明：<code>ABNF</code>用作<code>internet</code>中通信协议的定义语言</p><p><code>ABNF</code>是最严谨的<code>HTTP</code>报文格式描述形式，脱离<code>ABNF</code>谈论<code>HTTP</code>报文格式，往往都是片面、不严谨的</p><p>关于HTTP报文格式的定义</p><ul><li><p><a href="https://tools.ietf.org/html/rfc2616%23section-4">RFC 2616 4.HTTP Message</a> (旧)</p></li><li><p><a href="https://tools.ietf.org/html/rfc7230">RFC 7230 3.Message Format</a> (新)</p></li></ul><p><strong>ABNF核心规则</strong></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bda95486b02a4855a292f21c0d4d6e82~tplv-k3u1fbpfcp-watermark.image"></p><h6><span id="abnf-biao-shi-de-bao-wen-ge-shi">ABNF表示的报文格式</span><a href="#abnf-biao-shi-de-bao-wen-ge-shi" class="header-anchor">#</a></h6><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1dcf0fd226e940649c3d6d364c72c63f~tplv-k3u1fbpfcp-watermark.image"></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b5ca7f0b79b47769cc173c3e381520c~tplv-k3u1fbpfcp-watermark.image"></p><h4><span id="url-de-bian-ma">URL的编码</span><a href="#url-de-bian-ma" class="header-anchor">#</a></h4><p>URL中一旦出现了一些特殊字符(比如中文、空格)，需要进行<a href="https://tool.oschina.net/encode?type=4">编码</a></p><p>在浏览器地址栏输入URL时，是采用UTF-8进行编码</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dc932c8a3e0b4240abce2d0b195d3413~tplv-k3u1fbpfcp-watermark.image"></p><h4><span id="qing-qiu-fang-fa">请求方法</span><a href="#qing-qiu-fang-fa" class="header-anchor">#</a></h4><p><a href="https://tools.ietf.org/html/rfc7231">RFC 7231,section 4: Request methods</a>：描述了8中请求方法<br><code>GET</code> <code>HEAD</code> <code>POST</code> <code>PUT</code> <code>DELETE</code> <code>CONNECT</code> <code>OPTIONS</code> <code>TRACE</code></p><p><a href="https://tools.ietf.org/html/rfc5789%23section-2">RFC 5789,section 2: Patch method</a>: 描述了<code>PATCH</code>方法</p><p><code>POST（增删改）</code>：常用于添加、修改、删除的操作，请求参数可以放到请求体中(没有大小限制)</p><p><code>GET（查）</code> : 常用于读取的操作，请求参数直接拼接在URL的后面(浏览器对<code>URL</code>是有长度限制的)</p><p><code>HEAD</code>:请求得到与<code>GET</code>请求相同的响应，但没有响应体</p><pre><code>使用场景举例：在下载一个大文件前，先获取其大小，再决定是否要下载。以此可以节约带宽资源。</code></pre><p><code>OPTIONS</code>:用于获取目的资源所支持的通信选项，比如服务器支持的请求方法<br> <img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10d0b236dbca433d939f0f4c48cbc968~tplv-k3u1fbpfcp-watermark.image"></p><p> <code>PUT</code>:用于对已存在的资源进行整体覆盖</p><p> <code>PATCH</code>：用于对资源进行部分修改(资源不存在，会创建新的资源)</p><p> <code>DELETE</code>：用于删除指定的资源</p><p> <code>TRACE</code>:请求服务器回显其收到的请求信息（发出什么就收到什么），主要用于HTTP请求的测试或诊断</p><p> <code>CONNECT</code>：可以开启一个客户端与所请求资源之间的双向沟通的通道，它可以用来创建隧道(<code>tunnel</code>)</p><pre><code> 可以用来访问采用了SSL(HTTPS)协议的站点</code></pre><h4><span id="tou-bu-zi-duan">头部字段</span><a href="#tou-bu-zi-duan" class="header-anchor">#</a></h4><p>头部字段可以分为4种类型 （了解即可，主要看请求头和响应头）</p><p><code>请求头字段(Request Header Fields)</code>: 有关要获取的资源或客户端本身信息的消息头</p><p><code>响应头字段(Response Header Fields)</code>: 有关响应的补充信息，比如服务器本身（名称和版本等）的消息头</p><p><code>实体头字段(Entity Header Fields)</code>: 有关实体主体的更多信息，比如主体长度(<code>Content-Length</code>) 或其<code>MIME</code>类型</p><p><code>通用头字段(General Header Fields)</code>: 同时适用于请求和响应消息，但与消息主体无关的消息头</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0a2ff8388cc34a6e99d2571cc80d44a5~tplv-k3u1fbpfcp-watermark.image" alt="请求头"></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5eb8a4f321c94ef188e249fbd502b965~tplv-k3u1fbpfcp-watermark.image" alt="响应头"></p><h5><span id="bu-fen-xiang-jie">部分详解</span><a href="#bu-fen-xiang-jie" class="header-anchor">#</a></h5><p>请求体<code>Origin</code> 和 响应头<code>Access-Control-Allow-Origin</code> 用在跨域，受到同源策略（基于安全策略）影响，前端和后台要进行跨域处理</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/40b7bfbff20948e1860f7f82e3e07670~tplv-k3u1fbpfcp-watermark.image"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/061b7d6da8814ea2920cc781836f4776~tplv-k3u1fbpfcp-watermark.image"></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a1e6c50f4f2d4fe181fd96bf3d5cd890~tplv-k3u1fbpfcp-watermark.image"></p><p><code>Cookie</code> 和 <code>Set-Cookie</code><br><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b049f666c1a24d328e2f77b5ec57aef5~tplv-k3u1fbpfcp-watermark.image"><br><code>Cookie</code>: 在客户端（浏览器）存储一些数据，存储到本地磁盘（硬盘），服务器可以返回<code>Cookie</code>交给客户端去存储</p><p><code>Session</code>:在服务器存储一些数据，存储到内存中（默认时长是30分钟）</p><h4><span id="zhuang-tai-ma-status-code">状态码(Status Code)</span><a href="#zhuang-tai-ma-status-code" class="header-anchor">#</a></h4><p>在<a href="https://tools.ietf.org/html/rfc2616%23section-10">RFC 2616 10.Status Code Definitions</a>规范中定义,状态码指示HTTP请求是否已成功完成</p><p>状态码可以分为5类：</p><ul><li>信息响应：100~199</li><li>成功响应：200~299</li><li>重定向：300~399</li><li>客户端错误：400~499</li><li>服务器错误：500~599</li></ul><h5><span id="chang-jian-zhuang-tai-ma">常见状态码</span><a href="#chang-jian-zhuang-tai-ma" class="header-anchor">#</a></h5><ul><li>100 Continue<blockquote><p>请求的初始部分已经被服务器收到，并且没有被服务器拒绝。客户端应继续发送剩余的请求，如果请求已经完成，就忽略这个响应</p></blockquote></li><li>200 OK<blockquote><p>请求成功</p></blockquote></li><li>302 Found<blockquote><p>请求的资源被暂时的移动到了由<code>Location</code>头部指定的<code>URL</code>上 (会进行重定向)</p></blockquote></li><li>304 Not Modified<blockquote><p>说明无需再次传输请求的内容，也就是说可以使用缓存的内容(服务器给回的响应体中没有数据，使用缓存资源)</p></blockquote></li><li>400 Bad Request<blockquote><p>由于语法无效，服务器无法理解该请求</p></blockquote></li><li>401 Unauthorized<blockquote><p>用于缺乏目标资源要求的身份验证凭证(网页中出现身份验证的弹框)</p></blockquote></li><li>403 Forbidden<blockquote><p>服务器端有能力处理该请求，但是拒绝授权访问</p></blockquote></li><li>404 Not Found<blockquote><p>服务端无法找到所请求的资源</p></blockquote></li><li>405 Method Not Allowed <blockquote><p>服务器禁止使用当前<code>HTTP</code>方法的请求 （服务器可以处理<code>GET</code>方法，但是某个请求禁止了<code>GET</code>方法）</p></blockquote></li><li>406 Not Acceptable<blockquote><p>服务端无法提供与<code>Accept—Charset</code>以及<code>Accept-Laguage</code>指定的值相匹配的响应</p></blockquote></li><li>408 Request Timeout<blockquote><p>服务器响应将没有在使用的连接关闭，一些服务器在空闲连接上发送此消息，即便是客户端没有发送任何请求的情况下</p></blockquote></li><li>500 Internal Server Error<blockquote><p>所请求的服务器遇到意外的情况，并阻止其执行请求（服务器宕机）</p></blockquote></li><li>501 Not Implemented <blockquote><p>请求的方法不被服务器支持，因此无法被处理，服务器必须支持的方法（即不会返回这个状态码的方法）只有<code>GET</code>和<code>HEAD</code></p></blockquote></li><li>502 Bad Gateway<blockquote><p>作为网关或代理角色的服务器，从上游服务器(如<code>tomcat</code>)中接收的响应是无效的</p></blockquote></li><li>503 Service Unavailable<blockquote><p>服务器尚未处于可以接受请求的状态（通常造成这种情况的原因是由于服务器停机维护或者已超载）</p></blockquote></li></ul><h4><span id="biao-dan-form-ti-jiao">表单(form)提交</span><a href="#biao-dan-form-ti-jiao" class="header-anchor">#</a></h4><h5><span id="chang-yong-shu-xing">常用属性</span><a href="#chang-yong-shu-xing" class="header-anchor">#</a></h5><blockquote><p><code>action</code>：请求的<code>URI</code></p></blockquote><blockquote><p><code>method</code>：请求的方法 (<code>GET</code> 、 <code>POST</code>)</p></blockquote><blockquote><p><code>enctype</code>：<code>post</code>请求时，请求体的编码方式</p><ul><li><code>application/x-www-form-urlencoded</code>（默认值）<ul><li>用&amp;分隔参数，用=分隔键和值，字符用URL编码方式进行编码,举例： <code>username=123&amp;password=456</code>（类似普通的post请求体格式）</li></ul></li><li><code>multipart/form-data</code><ul><li>文件上传时候必须使用这种编码方式</li></ul></li></ul></blockquote><h5><span id="multipart-form-data">multipart/form-data</span><a href="#multipart-form-data" class="header-anchor">#</a></h5><p>参考<a href="https://tools.ietf.org/html/rfc1521">RFC 1521</a></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8afc5ce812624150b78276480c13f799~tplv-k3u1fbpfcp-watermark.image"></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7afcc49efa1b4217a54bbc028eebf646~tplv-k3u1fbpfcp-watermark.image"></p><h4><span id="dai-li-fu-wu-qi-proxy-server">代理服务器(Proxy Server)</span><a href="#dai-li-fu-wu-qi-proxy-server" class="header-anchor">#</a></h4><p><strong>特点</strong>：本身不生成内容，处于中间位置转发上下游的请求和响应</p><ul><li>面向下游的客户端：它是服务器</li><li>面向上游的服务器：它是客户端<h5><span id="zheng-xiang-dai-li-fan-xiang-dai-li">正向代理、反向代理</span><a href="#zheng-xiang-dai-li-fan-xiang-dai-li" class="header-anchor">#</a></h5>正向代理：代理的对象是客户端</li></ul><blockquote><p>作用 </p><ol><li>隐藏客户端身份</li><li>绕过防火墙(突破访问限制)</li><li>Internet访问控制</li><li>数据过滤<br>等等<br><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f4b1204f7112440496fd8d731c0e8164~tplv-k3u1fbpfcp-watermark.image"></li></ol></blockquote><p>反向代理：代理的对象是服务器 </p><blockquote><p>作用 </p><ol><li>隐藏服务器身份</li><li>安全防护</li><li>负载均衡<br>等等<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/478520a68db94c309b965729885fff16~tplv-k3u1fbpfcp-watermark.image"></li></ol></blockquote><h5><span id="zhua-bao-gong-ju-de-yuan-li">抓包工具的原理</span><a href="#zhua-bao-gong-ju-de-yuan-li" class="header-anchor">#</a></h5><p><code>Fiddler</code>、<code>Charles</code>等抓包工具的原理:在客户端启动了正向代理服务</p><p>需要注意的是<code>Wireshark的</code>原理是:通过底层驱动，拦截网卡上流过的数据</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/262cead9d94a4617a7a1f55a97aa138c~tplv-k3u1fbpfcp-watermark.image"></p><h5><span id="dai-li-fu-wu-qi-xiang-guan-de-tou-bu-zi-duan">代理服务器- 相关的头部字段</span><a href="#dai-li-fu-wu-qi-xiang-guan-de-tou-bu-zi-duan" class="header-anchor">#</a></h5><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f564ea29537048d5b12842f3986de713~tplv-k3u1fbpfcp-watermark.image"></p><h4><span id="cdn">CDN</span><a href="#cdn" class="header-anchor">#</a></h4><p>CDN(Content Delivery Network 或 Content Distribution Network),译为：内容分发网络</p><ul><li>利用最靠近每位用户的服务器</li><li>更快更可靠的将音乐、图片、视频等资源文件(一般是静态资源)传递给用户</li></ul><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0ce7b79795e9435b946794c6a0708d87~tplv-k3u1fbpfcp-watermark.image"></p><h5><span id="shi-yong-cdn-qian-hou">使用CDN前后</span><a href="#shi-yong-cdn-qian-hou" class="header-anchor">#</a></h5><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8507248c644b44a99d81a1cd9331e30a~tplv-k3u1fbpfcp-watermark.image"></p><ul><li>CDN运营商在全国、乃至全球的各个大枢纽城市都建立了机房，部署了大量拥有高存储带宽的节点，构建了一个跨运营商、跨地域的专用网络，* * 内容所有者向CDN运营商支付费用，CDN将其内容交付给最终用户</li></ul><p>使用CDN前  </p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3e009ec6b4d3472282c460ad763a18be~tplv-k3u1fbpfcp-watermark.image"></p><p>使用CDN后</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ed2b0a5d229a4d63a0485f6fa6d08f4e~tplv-k3u1fbpfcp-watermark.image"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0302df0db14846f28631a2045d1f5f87~tplv-k3u1fbpfcp-watermark.image"></p><h2><span id="https">HTTPS</span><a href="#https" class="header-anchor">#</a></h2><p><code>HTTPS (HyperText Transfer Protocol Secure)</code>,译为超文本传输安全协议，常称为<code>HTTP over TLS</code>、<code>HTTP over SSL</code>、<code>HTTP Secure</code></p><p>由网景公司于1994年首次提出</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1f70e510711a46d89fbb6e65e74831a4~tplv-k3u1fbpfcp-watermark.image"></p><p><code>HTTPS</code>的默认端口号是<code>443</code>（<code>HTTP</code>是<code>80</code>）</p><p>现在在浏览器上输入 <a href="http://www.baidu.com/">http://www.baidu.com</a><br>会自动重定向到 <a href="https://www.baidu.com/">https://www.baidu.com</a></p><h4><span id="ssl-tls">SSL/TLS</span><a href="#ssl-tls" class="header-anchor">#</a></h4><p><code>HTTPS</code>是在<code>HTTP</code>的基础上使用<code>SSL/TLS</code>来加密报文，对窃听和中间人攻击提供合理的保护<br><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/846463a81b83415f8156edf76b934338~tplv-k3u1fbpfcp-watermark.image"></p><p><code>SSL/TLS</code> 也可以用在其他的协议上，比如</p><ul><li>FTP + SSL/TLS –&gt; FTPS</li><li>SMTP + SSL/TLS –&gt; SMTPS</li></ul><h5><span id="ding-yi">定义</span><a href="#ding-yi" class="header-anchor">#</a></h5><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f3b62e4f3c0242f5b4623fa25326ae84~tplv-k3u1fbpfcp-watermark.image"></p><h5><span id="ssl-tls-gong-zuo-zai-na-yi-ceng">SSL/TLS - 工作在哪一层</span><a href="#ssl-tls-gong-zuo-zai-na-yi-ceng" class="header-anchor">#</a></h5><p>在应用层和传输层之间</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9bd1cdc4e2bd4cbaa303c712da1f38f7~tplv-k3u1fbpfcp-watermark.image"></p><h4><span id="openssl">OpenSSL</span><a href="#openssl" class="header-anchor">#</a></h4><p><code>OpenSSL</code> 是<code> SSL/TLS</code>协议的开源实现，始于1998年，支持<code>windows</code>、<code>Mac</code>、<code>Linux</code>等平台</p><ul><li><code>Linux</code>、<code>Mac</code>一般自带<code>OpenSSL</code></li><li><code>Windows</code>下载安装<a href="https://slproweb.com/products/Win32OpenSSL.html">OpenSSL</a></li></ul><p><strong>常用命令</strong><br>生成私钥、生成公钥</p><ul><li>可以使用OpenSSL构建一套属于自己的CA，自己给自己颁发证书，称为“自签名证书”</li></ul><h4><span id="https-de-cheng-ben">HTTPS的成本</span><a href="#https-de-cheng-ben" class="header-anchor">#</a></h4><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c134389d1924324b270aeca8d096428~tplv-k3u1fbpfcp-watermark.image"></p><h4><span id="https-de-tong-xin-guo-cheng">HTTPS的通信过程</span><a href="#https-de-tong-xin-guo-cheng" class="header-anchor">#</a></h4><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b2c0d65ae624be0ae4fa8a0c894ba61~tplv-k3u1fbpfcp-watermark.image"></p><h4><span id="tls-1-2-de-lian-jie">TLS 1.2的连接</span><a href="#tls-1-2-de-lian-jie" class="header-anchor">#</a></h4><p>针对<code>ECDHE</code>密钥交换算法产生的步骤</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eda429a13eb94d3ba5f1b6680db1794e~tplv-k3u1fbpfcp-watermark.image"></p><p><strong>TLS 1.2的连接 - ①</strong><br><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71fddd18c8be4916b9d2ba29cb16d781~tplv-k3u1fbpfcp-watermark.image"></p><p><strong>TLS 1.2的连接 - ②</strong><br><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e5caf4c710ce4c0096f4c8f452dcf725~tplv-k3u1fbpfcp-watermark.image"></p><p><strong>TLS 1.2的连接 - ③</strong><br><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a45d7d93233641ccb2bf20d9599dc1b9~tplv-k3u1fbpfcp-watermark.image"></p><p><strong>TLS 1.2的连接 - ④</strong><br><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bb2dbd47855040be9d4bc99f5b9be6fa~tplv-k3u1fbpfcp-watermark.image"><br><strong>TLS 1.2的连接 - ⑤</strong><br><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cbdcc4fb5c7943d4a445e3bce45ecb0a~tplv-k3u1fbpfcp-watermark.image"></p><p><strong>TLS 1.2的连接 - ⑥</strong><br><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/908c62de3c734740ba981c6ede15fb14~tplv-k3u1fbpfcp-watermark.image"></p><p><strong>TLS 1.2的连接 - ⑦</strong><br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/61c5d40f91814841b0bc5322f431c027~tplv-k3u1fbpfcp-watermark.image"></p><p><strong>TLS 1.2的连接 - ⑧</strong><br><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fa731244247f419ca5ba303068661c89~tplv-k3u1fbpfcp-watermark.image"></p><p><strong>TLS 1.2的连接 - ⑨、⑩</strong><br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b100d385d7c848429affd6995b20ad39~tplv-k3u1fbpfcp-watermark.image"></p><h4><span id="https-qing-qiu">HTTPS请求</span><a href="#https-qing-qiu" class="header-anchor">#</a></h4><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3b3ad3f92a884ddc906ed7d38f0aee04~tplv-k3u1fbpfcp-watermark.image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;ji-chu-gai-nian&quot;&gt;基础概念&lt;/span&gt;&lt;a href=&quot;#ji-chu-gai-nian&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h4&gt;&lt;span id=&quot;ying-yong-ceng-chang-jian</summary>
      
    
    
    
    
    <category term="网络" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
</feed>
